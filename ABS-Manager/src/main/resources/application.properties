spring.application.name=ABS-Manager

# Thymeleaf Template Config
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# Statische Ressourcen aktivieren
spring.web.resources.static-locations=classpath:/static/

# OpenAI API Key entfernen oder korrekt setzen, falls benötigt
# Falls OpenAI nicht verwendet wird, sollte es aus der pom.xml entfernt werden.
spring.ai.openai.api-key=DEIN_OPENAI_KEY  # Falls benötigt, sonst entfernen
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://localhost:5432/medizin_db
spring.datasource.username=test
spring.datasource.password=123
spring.datasource.driver-class-name=org.postgresql.Driver

server.port=8080

# JWT-Authentifizierung für Ressourcenserver (Resource Server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/Tholen
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# OAuth2 Login mit Keycloak aktivieren
spring.security.oauth2.client.registration.keycloak.client-id=abs-manager
spring.security.oauth2.client.registration.keycloak.client-secret=YMuHrioHADQwsGx7DPsymXOZSeuCQJ6F
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8081/realms/Tholen
spring.security.oauth2.client.provider.keycloak.authorization-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Fehleranalyse aktivieren (Debugging)
logging.level.org.springframework.security=DEBUG
logging.level.org.keycloak=DEBUG
